library(topGO)

## all_genes.txt is the list of all the genes annoated in the genome and Mcscan_single_copy.txt is the file with the candidate geneset
geneID2GO = readMappings(file = "all_genes.txt")
geneUniverse = names(geneID2GO)

genesOfInterest = read.table("Mcscan_single_copy.txt", sep = "\t")
genesOfInterest = as.character(genesOfInterest$V1)

geneList = factor(as.integer(geneUniverse %in% genesOfInterest))
names(geneList) = geneUniverse

myGOdata = new("topGOdata",
               description = "My project",
               ontology = "BP",
               allGenes = geneList,
               annot = annFUN.gene2GO,
               gene2GO = geneID2GO)

resultFisher = runTest(myGOdata, algorithm = "weight01", statistic = "fisher")

goEnrichment<- GenTable(
  myGOdata,
  FS = resultFisher,
  orderBy = "FS",
  topNodes = 500,
  numChar = 70)

library(tidyverse)
goEnrichment <- as.data.frame(goEnrichment)

goEnrichment = rename(goEnrichment, p_value=FS)
goEnrichment$p_value <- as.numeric(goEnrichment$p_value)
goEnrichment <- goEnrichment[goEnrichment$p_value < 0.05,]
goEnrichment <- goEnrichment[,c("GO.ID","Term","p_value", "Annotated")]
goEnrichment

goEnrichment = rename(goEnrichment, count = Annotated)

ntop <- 30
ggdata <- goEnrichment[1:ntop,]
ggdata$Term <- factor(ggdata$Term, levels = rev(ggdata$Term)) # fixes order
gg1 <- ggplot(ggdata,
              aes(x = Term, y = -log10(p_value), size = count, fill = -log10(p_value))) +
  
  expand_limits(y = 1) +
  geom_point(shape = 21) +
  scale_size(range = c(2.5,12.5)) +
  scale_fill_continuous(low = 'royalblue', high = 'red4') +
  
  xlab('') + ylab('Enrichment score') +
  labs(
    title = 'GO Biological processes - single copy genes',
    subtitle = 'Top 30 terms ordered by p-value') +
  theme_bw(base_size = 24) +
  theme(
    legend.position = 'right',
    legend.background = element_rect(),
    plot.title = element_text(angle = 0, size = 16, face = 'bold', vjust = 1),
    plot.subtitle = element_text(angle = 0, size = 14, face = 'bold', vjust = 1),
    plot.caption = element_text(angle = 0, size = 12, face = 'bold', vjust = 1),
    
    axis.text.x = element_text(angle = 0, size = 12, face = 'bold', hjust = 1.10),
    axis.text.y = element_text(angle = 0, size = 12, face = 'bold', vjust = 0.5),
    axis.title = element_text(size = 12, face = 'bold'),
    axis.title.x = element_text(size = 12, face = 'bold'),
    axis.title.y = element_text(size = 12, face = 'bold'),
    axis.line = element_line(colour = 'black'),
    
    #Legend
    legend.key = element_blank(), # removes the border
    legend.key.size = unit(1, "cm"), # Sets overall area/size of the legend
    legend.text = element_text(size = 14, face = "bold"), # Text size
    title = element_text(size = 14, face = "bold")) +
  coord_flip()

plot(gg2)
